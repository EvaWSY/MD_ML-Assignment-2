require(tidyverse)
require(stargazer)
install.packages("stargazer")
require(stargazer)
#Read in data
poll_data <- read_tsv("./Data/poll_data.tsv")
poll_data
names(poll_data)
summary(poll_data)
poll_data
unique(poll_data$race)
#Run logistic model with all variables
poll_model <- glm(formula = vote_2008 ~ 1 + .,family = "binomial",data = poll_data)
#Run logistic model with all variables
poll_model <- glm(formula = vote_2008 ~ "barack obama" + .,family = "binomial",data = poll_data)
poll_data <- poll_data %>%
transmute(
state,
sex,
race = as.factor(race, levels = c("white","black","hispanic","other")),
age,
education,
party,
ideology,
vote_2008 = ifelse(vote_2008 == "barack obama", 1, 0),
state_contestedness
)
poll_data <- poll_data %>%
transmute(
state,
sex,
race = factor(race, levels = c("white","black","hispanic","other")),
age,
education,
party,
ideology,
vote_2008 = ifelse(vote_2008 == "barack obama", 1, 0),
state_contestedness
)
#Run logistic model with all variables
poll_model <- glm(formula = vote_2008 ~ 1 + .,family = "binomial",data = poll_data)
poll_model
unique(poll_data$age)
#coefficients of age groups and gender
poll_model$coefficients[which(names(poll_model$coefficients) %in% c("age30-44","age45-64","age65+","sexmale"))]
summary(poll_model)
factor(age)
#Transform vote_2008 into binary and race into a factor variable
poll_data <- poll_data %>%
transmute(
state,
sex,
race = factor(race, levels = c("white","black","hispanic","other")),
age = factor(age),
education,
party,
ideology,
vote_2008 = ifelse(vote_2008 == "barack obama", 1, 0),
state_contestedness
)
#Run logistic model with all variables
poll_model <- glm(formula = vote_2008 ~ 1 + .,family = "binomial",data = poll_data)
#coefficients of age groups and gender
poll_model$coefficients[which(names(poll_model$coefficients) %in% c("age30-44","age45-64","age65+","sexmale"))]
poll_data
unique(poll_data)
unique(ColSum(poll_data))
unique(colSum(poll_data))
distinct(poll_data)
#Transform vote_2008 into binary and race into a factor variable
poll_data <- poll_data %>%
transmute(
state,
sex,
race,
age,
education,
party,
ideology,
vote_2008 = ifelse(vote_2008 == "barack obama", 1, 0),
state_contestedness
)
#Run logistic model with all variables
poll_model <- glm(formula = vote_2008 ~ 1 + .,family = "binomial",data = poll_data)
#Read in data
poll_data <- read_tsv("./Data/poll_data.tsv")
#Transform vote_2008 into binary and race into a factor variable
poll_data <- poll_data %>%
transmute(
state,
sex,
race,
age,
education,
party,
ideology,
vote_2008 = ifelse(vote_2008 == "barack obama", 1, 0),
state_contestedness
)
#Run logistic model with all variables
poll_model <- glm(formula = vote_2008 ~ 1 + .,family = "binomial",data = poll_data)
#Convert to probabilistic predictions
poll_model_pred <- predict(poll_model, type = 'response')
#Change this to binary predictions based on if the predicted probability is >0.5 = "obama"
poll_data <- mutate(poll_data, predict1 = ifelse(poll_model_pred > 0.5,"barack obama","john mcCain"))
poll_data
#Change probability to binary predictions based on if the predicted probability is >=0.7 = "obama"
poll_data <- mutate(poll_data, predict2 = ifelse(poll_model_pred >= 0.7,"barack obama","john mcCain"))
poll_data
#Read in data
poll_data_full <- read_tsv("./Data/poll_data_full.tsv")
# Calculate accuracy
n(poll_data)
# Calculate accuracy
poll_data %>%
n()
# Calculate accuracy
poll_data %>%
nrow()
# Calculate accuracy
poll_data %>%
filter(
vote_2008 == "1" & predict1 == "barack obama"
) %>%
nrow()
#Change this to binary predictions based on if the predicted probability is >0.5 = "obama"
poll_data <- mutate(poll_data, predict1 = ifelse(poll_model_pred > 0.5,"barack obama","john mcCain"))
poll_data
# Calculate accuracy
poll_data %>%
filter(
(vote_2008 == "1" & predict1 == "barack obama"),
(vote_2008 == "0" & predict1 == "john mcCain")
) %>%
nrow()
# Calculate accuracy
poll_data %>%
filter(
(vote_2008 == "1" & predict1 == "barack obama") | ((vote_2008 == "0" & predict1 == "john mcCain"))
) %>%
nrow()
poll_data
# Calculate accuracy
accurate_pred <- poll_data %>%
filter(
(vote_2008 == "1" & predict1 == "barack obama") | ((vote_2008 == "0" & predict1 == "john mcCain"))
) %>%
nrow()
accurate_pred
class(accurate_pred)
# Calculate accuracy
total_obs <- 10000L
accuracy <- accurate_pred/total_obs*100%
accuracy <- accurate_pred/total_obs*100
accuracy
poll_data %>%
summarise(
true_positive = nrow(filter(vote_2008 == "1" & predict1 == "barack obama"))
)
poll_data %>%
summarise(
true_positive = nrow(vote_2008 == "1" & predict1 == "barack obama")
)
poll_data %>%
mutate(
true_pos =  vote_2008 == "1" & predict1 == "barack obama"
)
accurate_pred/total_obs*100
poll_data$true_pos[TRUE]
poll_data <- poll_data %>%
mutate(
true_pos =  vote_2008 == "1" & predict1 == "barack obama"
)
poll_data <- poll_data %>%
mutate(
true_pos =  vote_2008 == "1" & predict1 == "barack obama"
)
poll_data$true_pos[TRUE]
poll_data <- poll_data %>%
mutate(
true_pos =  vote_2008 == "1" & predict1 == "barack obama"
) %>%
summarise(
recall = count(true_pos[TRUE])
)
poll_data <- poll_data %>%
mutate(
true_pos =  vote_2008 == "1" & predict1 == "barack obama"
) %>%
summarise(
recall = tally(true_pos[TRUE])
)
poll_data <- poll_data %>%
mutate(
true_pos =  vote_2008 == "1" & predict1 == "barack obama"
) %>%
summarise(
recall = nrow(true_pos[TRUE])
)
#Read in data
poll_data <- read_tsv("./Data/poll_data.tsv")
#Transform vote_2008 into binary and race into a factor variable
poll_data <- poll_data %>%
transmute(
state,
sex,
race,
age,
education,
party,
ideology,
vote_2008 = ifelse(vote_2008 == "barack obama", 1, 0),
state_contestedness
)
#Change this to binary predictions based on if the predicted probability is >0.5 = "obama"
poll_data <- mutate(poll_data, predict1 = ifelse(poll_model_pred > 0.5,"barack obama","john mcCain"))
true_pos <- poll_data %>%
filter(
vote_2008 == "1" & predict1 == "barack obama"
) %>%
nrow()
true_pos
positives <- poll_data %>% filter(vote_2008 == "1") %>% nrow()
true_pos/positives
true_pos/positives*100
pred_positives <- poll_data %>% filter(predict1 == "barack obama") %>% nrow()
true_pos/pred_positives*100
accurate_pred2 <- poll_data %>%
filter(
(vote_2008 == "1" & predict2 == "barack obama") | ((vote_2008 == "0" & predict2 == "john mcCain"))
) %>%
nrow()
#Change probability to binary predictions based on if the predicted probability is >=0.7 = "obama"
poll_data <- mutate(poll_data, predict2 = ifelse(poll_model_pred >= 0.7,"barack obama","john mcCain"))
accurate_pred2 <- poll_data %>%
filter(
(vote_2008 == "1" & predict2 == "barack obama") | ((vote_2008 == "0" & predict2 == "john mcCain"))
) %>%
nrow()
accurate_pred2/total_obs*100
true_pos2 <- poll_data %>% filter(vote_2008 == "1" & predict2 == "barack obama") %>% nrow()
true_pos/positives*100
pred_positives2 <- poll_data %>% filter(predict2 == "barack obama") %>% nrow()
true_pos/pred_positives*100
true_pos
positives
true_pos <- poll_data %>%
filter(
vote_2008 == "1", predict1 == "barack obama"
) %>%
nrow()
true_pos
positives <- poll_data %>% filter(predict1 == "1") %>% nrow()
true_pos/positives*100
positives
positives <- poll_data %>% filter(predict1 == "barack obama") %>% nrow()
true_pos/positives*100
positives <- poll_data %>% filter(vote_2008 == "1") %>% nrow()
true_pos/positives*100
pred_positives
true_pos
true_pos/pred_positives*100
accurate_pred2/total_obs*100
true_pos2 <- poll_data %>% filter(vote_2008 == "1" & predict2 == "barack obama") %>% nrow()
true_pos2/positives*100
pred_positives2 <- poll_data %>% filter(predict2 == "barack obama") %>% nrow()
true_pos2/pred_positives2*100
#Read in data
poll_data_full <- read_tsv("./Data/poll_data_full.tsv")
#create a new variable collapsing obama and mcCain votes to 1 and others as 0
poll_data_full = mutate(poll_data_full,major_or_not = ifelse(vote_2008 == "other",0,1))
#Logistic Regression
poll_full_model <- glm(formula = major_or_not ~ 1 + .,family = "binomial",data = poll_data_full %>% select(-vote_2008))
#Convert to probabilistic predictions
poll_full_model_pred <- predict(poll_full_model, type = 'response')
#filter the poll data to only individuals who actually voted for major party candidates
poll_full_major_data <- filter(poll_data_full,major_or_not == 1)
poll_full_major_data$vote_2008 <- factor(poll_full_major_data$vote_2008,levels = c("john mcCain","barack obama"))
#Logistic regression
poll_full_major_model <- glm(formula = vote_2008 ~ 1 + .,family = "binomial",data = poll_full_major_data %>% select(-major_or_not))
#Convert to probabilistic predictions
poll_full_major_model_pred <- predict(poll_full_major_model, type = 'response')
poll_full_model
poll_data_full
install.packages("Mass")
install.packages("MASS")
require(MASS)
#Convert to probabilistic predictions
poll_full_major_model_pred <- predict(poll_full_major_model, type = 'response')
candidate_model <- lda(vote_2008 ~. , data = poll_data_full)
names(poll_data_full)
poll_data_full$vote_2008
poll_data_full
candidate_model <- lda(vote_2008 ~. + . , data = poll_data_full)
poll_data_full
poll_full_model_pred
poll_full_major_model_pred
poll_data
#Transform vote_2008 into binary and race into a factor variable
poll_data <- poll_data %>%
transmute(
state,
sex,
race,
age,
education,
party,
ideology,
vote_2008 = ifelse(vote_2008 == "barack obama", 1, 0),
state_contestedness
)
poll_data
#Read in data
poll_data <- read_tsv("./Data/poll_data.tsv")
poll_data
poll_full_model
poll_data_full <- poll_data_full %>%
mutate(
candidate_pred = ifelse(poll_full_model_pred < 0.5, "Other", "Major")
)
poll_data_full
poll_data_full <- poll_data_full %>%
mutate(
pred_others = ifelse(poll_full_model_pred < 0.5, "Other", "Major"),
pred_major_candidates = ifelse(poll_full_major_model_pred > 0.5, "barack obama", "john mcCain")
)
poll_data_full <- poll_data_full %>%
mutate(
pred_candidates = case_when(
poll_full_model_pred < 0.5 ~"Other",
poll_full_major_model_pred > 0.5 ~ "barack obama"
poll_full_major_model_pred < 0.5 ~ "john mcCain")
poll_data_full <- poll_data_full %>%
mutate(
pred_candidates = case_when(
poll_full_model_pred < 0.5 ~"Other",
poll_full_major_model_pred > 0.5 ~ "barack obama",
poll_full_major_model_pred < 0.5 ~ "john mcCain")
)
library(tidyverse)
trump_tweets <- read_tsv("./Data/trump_data.tsv")
trump_tweets
trump_tweets <- read_tsv("./Data/trump_data.tsv", col_names = c("source", "time_posted", "text"), col_types = c)
trump_tweets <- read_tsv("./Data/trump_data.tsv", col_names = c("source", "time_posted", "text"), col_types = "c")
trump_tweets
trump_tweets <- read_tsv("./Data/trump_data.tsv", col_names = c("source", "time_posted", "text"))
trump_tweets
library(twitterR)
install.packages("twitterR")
install.packages("twitteR")
library(twitteR)
trump_tweets <- read_tsv("./Data/trump_data.tsv", col_names = c("source", "time_posted", "text")) %>%
as_tibble()
trump_tweets
trump_tweets <- read_tsv("./Data/trump_data.tsv", col_names = c("source", "time_posted", "text")) %>%
tbl_df()
trump_tweets
library(lubridate)
library(scales)
trump_tweets %>%
count(source, hour = hour(with_tz(created, "EST"))) %>%
mutate(percent = n / sum(n)) %>%
ggplot(aes(hour, percent, color = source)) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
labs(x = "Hour of day (EST)",
y = "% of tweets",
color = "")
trump_tweets %>%
count(source, hour = hour(with_tz(time_posted, "EST"))) %>%
mutate(percent = n / sum(n)) %>%
ggplot(aes(hour, percent, color = source)) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
labs(x = "Hour of day (EST)",
y = "% of tweets",
color = "")
View(trump_tweets)
# After looking at the text more, we realized another identifier might be
# whether the tweet contains multimedia information (such as pictures), denoting by https://t.co* in text
trump_tweets %>% count(source,
multimedia = ifelse(str_detect(text, "t.co"),
"multimedia", "just text"))
# After looking at the text more, we realized another identifier might be
# whether the tweet contains multimedia information (such as pictures), denoting by https://t.co* in text
trump_tweets %>% count(source,
multimedia = ifelse(str_detect(text, "t.co"),
"multimedia", "just text")) %>%
mutate(percent = n / sum(n))
# Trump also seems to be more likely to retweet others
trump_tweets %>% count(
source, retweet = ifelse(str_detect(text, '^"'), "retweet", "not retweet")
) %>%
mutate(percent = n / sum(n))
trump_tweets %>% count(
source, retweet = ifelse(str_detect(text, "#"), "hastag", "no hastag")
) %>%
mutate(percent = n / sum(n))
trump_tweets %>% count(
source, retweet = ifelse(str_detect(tolower(text), "thank you"), "hastag", "no hastag")
) %>%
mutate(percent = n / sum(n))
trump_tweets %>% count(
source, retweet = ifelse(str_detect(tolower(text), "thank you"), "thank", "no thank")
) %>%
mutate(percent = n / sum(n))
install.packages(‘naivebayes’)
install.packages("naivebayes")
library(naivebayes)
# After looking at the text more, we realized another identifier might be
# whether the tweet contains multimedia information (such as pictures), denoting by https://t.co* in text
trump_tweets %>% count(source,
multimedia = ifelse(str_detect(text, "t.co"),
"multimedia", "just text")) %>%
mutate(percent = n / sum(n))
# So Trump usually tweets in the early morning, whereas his staff usually tweets in the afternoon and early evening
mutate(trump_tweets, hour = hour(with_tz(time_posted, "EST")))
# After looking at the text more, we realized another identifier might be
# whether the tweet contains multimedia information (such as pictures), denoting by https://t.co* in text
trump_tweets %>% count(source,
multimedia = ifelse(str_detect(text, "t.co"),
"multimedia", "just text")) %>%
mutate(percent = n / sum(n))
mutate(trump_tweets, mutlimedia = ifelse(str_detect(text, "t.co"), "multimedia", "just text"))
# So Trump usually tweets in the early morning, whereas his staff usually tweets in the afternoon and early evening
trump_tweets <- mutate(trump_tweets, hour = hour(with_tz(time_posted, "EST")))
trump_tweets
trump_tweets <-mutate(trump_tweets, mutlimedia = ifelse(str_detect(text, "t.co"), "multimedia", "just text"))
trump_tweets
trump_tweets <-mutate(trump_tweets, retweet = ifelse(str_detect(text, '^"'), "retweet", "not retweet"))
trump_tweets <-mutate(trump_tweets, hashtag = ifelse(str_detect(text, "#"), "hastag", "no hastag"))
trump_tweets
trump_tweets <-mutate(trump_tweets, mutlimedia = ifelse(str_detect(text, "t.co"), "multimedia", "just text"))
# Trump also seems to be more likely to retweet others
trump_tweets %>% count(
source, retweet = ifelse(str_detect(text, '^"'), "retweet", "not retweet")
) %>%
mutate(percent = n / sum(n))
trump_tweets <-mutate(trump_tweets, retweet = ifelse(str_detect(text, '^"'), "yes", "no"))
trump_tweets <-mutate(trump_tweets, hashtag = ifelse(str_detect(text, "#"), "yes", "no"))
trump_tweets
dt = sort(sample(nrow(trump_tweets), nrow(trump_tweets)*.8))
training <- trump_tweets[dt,]
test <- trump_tweets[-dt,]
training
test
# Randomly select training and testing sets from the original dataset
trump_tweets$source <- factor(levels = c("Trump", "Staff"))
# Randomly select training and testing sets from the original dataset
trump_tweets$source <- factor(source, levels = c("Trump", "Staff"))
training %>%
naive_bayes(y = source)
training
nb_mode <- training %>%
naive_bayes(y = source)
nb_mode <- training %>%
naive_bayes(y = "source")
